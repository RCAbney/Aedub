import Head from "next/head";
import styles from "../styles/Home.module.css";
import { useState } from "react";
import WrestlerCard from "../components/WrestlerCard";

export default function Home({ wrestlers }) {
  const [roster, setRoster] = useState("Men");
  return (
    <div className={styles.container}>
      <Head>
        <title>All Elite Wrestlers</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>All Elite Wrestlers</h1>
        <div>
          <button onClick={() => setRoster("Men")}>Men</button>
          <button onClick={() => setRoster("Women")}>Women</button>
          <button onClick={() => setRoster("All")}>All</button>
        </div>
        <div className={styles.grid}>
          {wrestlers
            .sort((a, b) => {
              if (a.Name < b.Name) {
                return -1;
              }
              if (a.Name > b.Name) {
                return 1;
              }
              return 0;
            })
            .filter((wrestler) => {
              if (roster === "All") {
                return wrestler.Active;
              }
              return wrestler.Active && wrestler.Roster === roster;
            })
            .map((wrestler) => {
              return (
                <div key={wrestler.id} className={styles.card}>
                  <WrestlerCard {...wrestler} />
                </div>
              );
            })}
        </div>
      </main>

      <footer className={styles.footer}>
        <p>All Elite Wrestlers</p>
      </footer>
    </div>
  );
}

export async function getStaticProps() {
  const response = await fetch(
    `https://api.airtable.com/v0/${process.env.AIRTABLE_BASE_ID}/Performers`,
    {
      headers: {
        Authorization: `Bearer ${process.env.AIRTABLE_API_KEY}`,
      },
    }
  );
  const { records } = await response.json();

  const wrestlers = records.map((record) => {
    return {
      id: record.id,
      ...record.fields,
    };
  });

  return {
    props: {
      wrestlers,
    },
  };
}
